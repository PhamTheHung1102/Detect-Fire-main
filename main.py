from ultralytics import YOLO
import cv2
import requests
import datetime
import time

# Load m√¥ h√¨nh YOLO ƒë√£ train
model = YOLO('model.pt')

# Kh·ªüi t·∫°o camera
cam = cv2.VideoCapture(0)

# Th√¥ng tin bot Telegram
api_key = '7924496422:AAG_ytGhrQmgPiEea57mHaR8Yn3oyvZJ4F8'
chat_id = '6805428031'

# Bi·∫øn ki·ªÉm so√°t g·ª≠i ·∫£nh (ch·ªâ g·ª≠i sau m·ªói 30s)
fire_detected = False
last_sent_time = 0  # L∆∞u th·ªùi gian g·ª≠i ·∫£nh cu·ªëi c√πng


# H√†m g·ª≠i ·∫£nh qua Telegram
def send_telegram_photo(photo_path):
    chat = f'üî• Ph√°t hi·ªán ch√°y l√∫c {datetime.datetime.now().strftime("%H:%M:%S")}'
    url_message = f'https://api.telegram.org/bot{api_key}/sendMessage'
    requests.post(url_message, data={'chat_id': chat_id, 'text': chat})

    # G·ª≠i ·∫£nh
    url_photo = f'https://api.telegram.org/bot{api_key}/sendPhoto'
    with open(photo_path, 'rb') as file:
        response = requests.post(url_photo, files={'photo': file}, data={'chat_id': chat_id, 'caption': chat})

    if response.status_code == 200:
        print("‚úÖ ƒê√£ g·ª≠i ·∫£nh th√†nh c√¥ng")
    else:
        print(f"‚ùå L·ªói g·ª≠i ·∫£nh: {response.text}")


# V√≤ng l·∫∑p ch√≠nh
while True:
    # ƒê·ªçc h√¨nh ·∫£nh t·ª´ camera
    ret, frame = cam.read()
    if not ret:
        print("‚ùå Kh√¥ng th·ªÉ ƒë·ªçc t·ª´ camera.")
        break

    # D·ª± ƒëo√°n v·ªõi YOLOv8
    results = model.predict(frame, conf=0.4, verbose=False)
    boxes = results[0].boxes.xyxy
    confs = results[0].boxes.conf

    # Hi·ªÉn th·ªã box v√† ƒë·ªô tin c·∫≠y
    fire_count = 0
    for i, box in enumerate(boxes):
        x1, y1, x2, y2 = map(int, box)
        confidence = float(confs[i])
        if confidence > 0.4:
            fire_count += 1
            cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 0, 255), 2)
            cv2.putText(frame, f'Fire: {confidence:.2f}', (x1, y1 - 10),
                        cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 255), 2)

    # X·ª≠ l√Ω ph√°t hi·ªán ch√°y
    if fire_count > 0:
        cv2.putText(frame, f'{fire_count} fire detected', (30, 35),
                    cv2.FONT_HERSHEY_SIMPLEX, 0.8, (0, 0, 255), 2)

        current_time = time.time()
        if not fire_detected or (current_time - last_sent_time > 30):
            fire_detected = True
            last_sent_time = current_time
            photo_path = 'fire_detected.jpg'

            # L∆∞u ·∫£nh & g·ª≠i Telegram
            cv2.imwrite(photo_path, frame)
            send_telegram_photo(photo_path)
    else:
        cv2.putText(frame, f'No fire visible', (30, 35),
                    cv2.FONT_HERSHEY_SIMPLEX, 0.8, (0, 255, 0), 2)
        fire_detected = False  # Reset c·ªù n·∫øu kh√¥ng c√≤n ph√°t hi·ªán ch√°y

    # Hi·ªÉn th·ªã khung h√¨nh
    cv2.imshow('Fire Detection', frame)

    # Tho√°t khi nh·∫•n ph√≠m 'q'
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Gi·∫£i ph√≥ng camera
cam.release()
cv2.destroyAllWindows()
